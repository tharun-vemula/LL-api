openapi: 3.0.0
servers:
  - description: LinkedList API
    url: http://localhost:3000/api/v1
info:
  description: LinkedList-API
  version: 1.0.0
  title: LinkedList API

paths:
  /users/register:
    post:
      tags:
        - User
      security:
        - bearerAuth: []
      summary: Creates a user. Only admin has this previlege
      description: |
        Creates a user.
      responses:
        "200":
          description: created user object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Access token is missing or invalid

  /users:
    get:
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: userId
          schema:
            type: string
          description: ID of the user
      summary: Fetches all users of the orginisation or by its Id
      responses:
        "200":
          description: an array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/update:
    put:
      tags:
        - User
      security:
        - bearerAuth: []
      summary: updates a user 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: updated user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/delete:
    delete:
      tags:
        - User
      security:
        - bearerAuth: []
      summary: deletes a user 
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                userId:
                  type: string
      responses:
        "200":
          description: updated user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

  /dashboard/admin:
    get:
      tags:
        - Dashboard
      security:
        - bearerAuth: []
      summary: Fetches all posts and jobs for admin dashboard
      responses:
        "200":
          description: Fetches all posts and jobs for admin dashboard
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : "#/components/schemas/Post"
  /dashboard/user:
    get:
      tags:
        - Dashboard
      security:
        - bearerAuth: []
      summary: Fetches all posts and jobs for user dashboard. Applied jobs are not included
      responses:
        "200":
          description: Fetches all posts and jobs for user dashboard
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : "#/components/schemas/Post"

  /applications/job:
    get:
      tags : 
        - Application
      security:
        - bearerAuth: []
      summary: Fetches applicants for a job
      parameters:
        - in: query
          name: jobId
          schema:
            type: string
          required: true
          description: ID of the job
      responses:
        "200":
          description: an array of applicant objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : "#/components/schemas/Application"  

  /applications/user:  
    get:
      tags : 
        - Application
      security:
        - bearerAuth: []
      summary: Fetches applications of a user
      parameters:
        - in: query
          name: userId
          schema:
            type: string
          required: true
          description: ID of the user
      responses:
        "200":
          description: an array of applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : "#/components/schemas/Application"
  
  /auth/login:
    post:
      tags:
        - Auth
      security:
        - bearerAuth: []
      summary: Authenticates a User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id : 
                  type : string
                password:
                  type: string
      responses:
        "200":
          description: a School object
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                  profile:
                    type: object
                  token:
                    type: string
  
  /jobs:
    get:
      tags:
        - Job
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: jobId
          schema:
            type: string
          description: ID of the job
      summary: fetches all jobs or a single job object whose id is specified
      description: fetches all jobs or a single job object whose id is specified
      responses:
        "200":
          description: An array of job objects (not including posts)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
        "401":
          description: Access token is missing or invalid

  /jobs/create:
    post:
      tags:
        - Job
      security:
        - bearerAuth: []
      summary: creates a job object
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        "200":
          description: created object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"

  /jobs/update:
    put:
      tags:
        - Job
      security:
        - bearerAuth: []
      summary: updates a job object
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        "200":
          description: created object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"

  /jobs/delete:
    delete:
      tags:
        - Job
      security:
        - bearerAuth: []
      summary: deletes a job object 
      parameters:
        - in: query
          name: jobId
          schema:
            type: string
          description: ID of the job
          required: true
      responses:
        "200":
          description: a Vehicle object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        "401":
          description: Access token is missing or invalid
  
  /posts:
    get:
      tags:
        - Post
      security:
        - bearerAuth: []
      summary: fetches all posts
      parameters:
        - in: query
          name: jobId
          schema:
            type: string
          description: ID of the post
      description: Fetches all posts
      responses:
        "200":
          description: An array of post objects (not including jobs)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
        "401":
          description: Access token is missing or invalid

  /post/create:
    post:
      tags:
        - Post
      security:
        - bearerAuth: []
      summary: creates a post object
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "200":
          description: created object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"

  /post/update:
    put:
      tags:
        - Post
      security:
        - bearerAuth: []
      summary: updates a post object
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "200":
          description: created object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"

  /post/delete:
    delete:
      tags:
        - Post
      security:
        - bearerAuth: []
      summary: deletes a post object 
      parameters:
        - in: query
          name: jobId
          schema:
            type: string
          description: ID of the post
      responses:
        "401":
          description: Access token is missing or invalid



  /profile:
    get:
      security:
        - bearerAuth: []
      tags: 
        - Profile
      summary: Fetches current user profile
      responses:
        "200":
          description: a profile object
          content:
            application/json:
              schema:
                type : array
                items:
                  $ref: "#/components/schemas/Profile"                  
        "401":
          description: Access token is missing or invalid

  /profile/create:
    post:
      tags:
        - Profile
      security:
        - bearerAuth: []
      summary: creates a profile for a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"                
      responses:
        "200":
          description: a user profile object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"                  
        "401":
          description: Access token is missing or invalid

  /profile/update:
    put:
      tags:
        - Profile
      security:
        - bearerAuth: []
      summary: updates a user profile
      description: updates a profile.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"                
      responses:
        "200":
          description: a Vehicle object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"                  
        "401":
          description: Access token is missing or invalid
    
    
    
  /applications/submit:
    post:
      tags:
        - Application
      security:
        - bearerAuth: []
      summary: submit an application
      requestBody:
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/Application"
      responses:
        "200":
          description: an application object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        "401":
          description: Access token is missing or invalid

  /application/delete:
    delete:
      tags:
        - Application
      security:
        - bearerAuth: []
      summary: deletes an application
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationId:
                  type: string
                userId:
                  type: string
      responses:
        "204":
          description: deleted object
        "401":
          description: Access token is missing or invalid

  /applications:
    get:
      tags:
        - Application
      security:
        - bearerAuth: []
      summary: fetches applications of a student
      responses:
        "200":
          description: an array of applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        "401":
          description: Access token is missing or invalid


components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    Application:
      type: object
      properties:
        applicationId:
          type: string
        jobId:
          type: string
        userId:
          type: string
        dateApplied: 
          type: string
        status:
          type: string
        
    Job:
      type: object
      properties:
        jobId:
          type: string
        company:
          type: string
        body:
          type: string
        expired: 
          type: boolean
        deadline: 
          type: string


    Post:
      type: object
      properties:
        body :
          type: string



    Profile:
      type: object
      properties:
        userId:
          type: string
        summary:
          type: string
        location:
          type: string
        dateOfBirth: 
          type: string
        gpa:
          type: number
        gender:
          type: string
        resume:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        yearOfGradutation:
          type: string
        branch: 
          type: string        

    User:
      type: object
      properties:
        userId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        kind:
          type: string
        
